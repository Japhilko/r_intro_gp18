}
# Chunk 8
table(datf$a11d056z)
# Chunk 9
age <- code_miss(datf$a11d056z)
# Chunk 10
table(age)
# Chunk 11
children <- as.factor(code_miss(datf$a11d094a))
table(children)
# Chunk 12
cdplot(children ~ age)
# Chunk 13
glm_1 <- glm(children ~ age,
family = binomial())
# Chunk 14
sum_glm1 <- summary(glm_1)
sum_glm1$coefficients
# Chunk 15
sum_glm1$coefficients
# Chunk 16
sum_glm1$coefficients
glm_1 <- glm(children ~ age,
family = binomial())
cdplot(children ~ age)
children <- as.factor(code_miss(datf$a11d094a))
table(children)
dat <- readstata13::read.dta13(paste0(gpdata_path,"/data/ZA5666_v1-0-0_Stata14.dta"))
datf <- readstata13::read.dta13(paste0(gpdata_path,"/data/ZA5666_v1-0-0_Stata14.dta"),
convert.factors = F)
age <- code_miss(datf$a11d056z)
table(age)
children <- as.factor(code_miss(datf$a11d094a))
table(children)
glm_1 <- glm(children ~ age,
family = binomial())
sum_glm1$coefficients
sum_glm1 <- summary(glm_1)
sum_glm1$coefficients
ilogit(sum_glm1$coefficients[2,1])
library(faraway)
ilogit(sum_glm1$coefficients[2,1])
sum_glm1$coefficients[2,1]
ilogit(1)
ilogit(20)
ilogit(40)
glm_1 <- glm(children ~ age,
family = binomial())
glm_0 <- glm(children ~ 1,
family = binomial())
summary(glm_0)
sum_glm0 <- summary(glm_0)
anova(glm_1, test="Chisq")
sum_glm1 <- summary(glm_1)
sum_glm1
sum_glm0
fit_prob <- exp(predict(glm_1))/(1+exp(predict(glm_1)))
library(ggplot2)
dfex <- data.frame(age,fit_prob)
ggplot(aes(x=age, y=fit_prob))  +
geom_line(aes(x=age, y=fit_prob))
?var
myfun <- function(x,y){
z <- x+y
return(z)
}
View(myfun)
myfun(2,3)
ergebnis <- myfun(2,3)
ergebnis
ab <- c(1,2,4,5,NA)
ab
mean(ab)
mean(ab,na.rm=T)
log <- c(TRUE,FALSE,TRUE)
log <- c(T,F)
str(log)
str(log)
ab==1
ab
num <- 8:5
mean(num)
var(mean)
str(num)
char <- c("a","1","op233")
str(char)
mean(char)
fac <- LETTERS[1:10]
fac <- as.factor(fac)
str(fac)
levals(fac)
levels(fac)
levels(fac) <- LETTERS
levels(fac)
length(fac)
str(fac)
table(fac)
table(char)
for (i in 1:4){
cat(i, "\n")
}
for (i in 1:10000){
cat(i, "\n")
}
j <-0
for (i in 1:10000){
j <- j+i
cat(i, "\n")
}
j
i<-1
j <-0
j <- j+i
j
i<-2
j <- j+i
j
i<-4
j <- j+i
j
head(dat)
dat1 <- dat[,1:100]
dim(dat1)
str(dat)
dat[,1] <- as.character(dat[,1])
dat[,2] <- as.character(dat[,2])
for( i in 1:ncol(dat1)){
dat[,i] <- as.character(dat[,i])
cat(i,"\n")
}
for( i in 1:ncol(dat1)){
dat1[,i] <- as.character(dat1[,i])
cat(i,"\n")
}
str(dat1)
for( i in 1:ncol(dat1)){
dat1[,i] <- as.character(dat1[,i])
cat(i)
}
for( i in 1:ncol(dat1)){
dat1[,i] <- as.character(dat1[,i])
cat(i, " ")
}
for( i in 1:ncol(dat1)){
dat1[,i] <- as.character(dat1[,i])
cat(i, "\n")
}
mean(ab) var(ab)
mean(ab)
var(ab)
for( i in 1:ncol(dat1)){cat(i, "\n")}
mean(ab);var(ab)
mean(ab);var(ab);
mean(ab);var(ab)
mean(ab);var(ab);
ab_dat <- data.frame(a=ab,
b=ab)
erg1 <- vector()
erg1
i<-1
tab <- table(dat[,i])
tab
length(tab)
erg1[i] <- length(tab)
erg1
i<-2
tab <- table(dat[,i])
tab
length(tab)
erg1[i] <- length(tab)
erg1
erg2[[i]] <- tab
erg2 <- list()
erg2[[i]] <- tab
for (i in 1:ncol(dat)){
tab <- table(dat[,i])
erg1[i] <- length(tab)
erg2[[i]] <- tab
cat(i, "\n")
}
erg2
erg2[[1]]
erg2[[2]]
?modulo
1:10%%2
repeat{
i <- i+1
if (i %in% c(2,4,6,8,10)){
cat(i,"\n")
}
if (i==10){
break
}
}
i<-0
repeat{
i <- i+1
if (i %in% c(2,4,6,8,10)){
cat(i,"\n")
}
if (i==10){
break
}
}
seq(1,10,by=2)
seq(2,10,by=2)
1:10 %% 2
i<-0
repeat{
i <- i+1
if (i %% 2==0){
cat(i,"\n")
}
if (i==10){
break
}
}
1:4
runif(4)
runif(4)
runif(4)
runif(4)
rnorm(4)
rnorm(4)
rnorm(4)
rnorm(4)
(ApplyDat <- cbind(1:4,runif(4),rnorm(4)))
myfun <- function(x){
m_x <- mean(x)
v_x <- var(x)
return(m_x,v_x)
}
myfun(ApplyDat[,1])
myfun <- function(x){
m_x <- mean(x)
v_x <- var(x)
return(c(m_x,v_x))
}
myfun(ApplyDat[,1])
apply(ApplyDat,1,myfun)
ApplyDat <- data.frame(Income=rnorm(5,1400,200),
Sex=sample(c(1,2),5,replace=T))
ApplyDat
?rnorm
tapply(ApplyDat$Income,ApplyDat$Sex,mean)
duration <- as.numeric(dat$bazq020a)
duration
dat$bazq020a <- as.numeric(dat$bazq020a)
tapply(dat$bazq020a,dat$a11d054a,mean)
tapply(dat$bazq020a,dat$a11d054a,mean,na.rm=T)
attach(dat)
bazq020a
table(ApplyDat$Income,ApplyDat$Sex)
dat$Dauer <- as.numeric(dat$bfzq020a)
dat$Dauer[dat$bfzq020a %in% c(-77,-22,-33,-77.-99)] <- NA
tapply(dat$Dauer,dat$bfzh070z,mean,na.rm=T)
dat$Dauer <- as.numeric(dat$bfzq020a)
dat$Dauer[dat$bfzq020a %in% c(-77,-22,-33,-77.-99)] <- NA
tapply(dat$Dauer,dat$bfzh070z,mean,na.rm=T)
tapply(dat$Dauer,dat$bfzh070z,mean,na.rm=T)
mean(dat$Dauer,na.rm=T)
tapply(dat$Dauer,dat$a11d054a,mean,na.rm=T)
colnames(dat)
which(colnames(dat)=="a11d054a")
agrep("a11",colnames(dat))
agrep("a11",colnames(dat),value=T)
grep("a11",colnames(dat),value=T)
att_dat <- attributes(dat)
grep("Alter",att_dat$var.labels,value=T)
?grep
agrep("Alter",att_dat$var.labels,value=T)
grep("Alter",att_dat$var.labels)
colnames(dat)[grep("Alter",att_dat$var.labels)]
View(dat)
load("~/GitHub/r_intro_gp18/data/dat_cf2.RData")
load("~/GitHub/r_intro_gp18/data/dat_cf2.RData")
DT::datatable(dat_cf2)
?datatable
setwd("D:/Eigene Dateien/Downloads")
dir()
setwd("D:/Eigene Dateien/Downloads")
load("dat_cf2.RData")
load("D:/Eigene Dateien/Downloads/dat_cf2.RData")
install.packages("DT")
library(DT)
DT::datatable(dat_cf2)
?datatable
dat$duration <- as.numeric(dat$bfzq020a)
summary(dat$duration)
hist(dat$duration)
dev.off()
hist(dat$duration)
hist(dat$duration)
png("dddd.png")
hist(dat$duration)
dev.off()
dev.off()
dev.off()
hist(dat$duration)
hist(dat$duration,col="blue",
main="Duration of interview",ylab="Frequency",
xlab="Duration")
hist(dat$duration,col="red",
main="Duration of interview",ylab="Frequency",
xlab="Duration")
##
hist(dat$duration,col=1,
main="Duration of interview",ylab="Frequency",
xlab="Duration")
colourpicker:::colourPickerAddin()
hist(dat$duration,col=c("#8B0000"))
install.packages("colour.picker")
install.packages("colourpicker")
colourpicker:::colourPickerAddin()
a <- runif(1000)
a <- runif(1000)
b <- runif(1000)
plot(a,b)
plot(a,b,pch=20)
plot(a,b,pch=20,col=rgb(1,0,0,.2))
barplot(c(3,4))
barplot(c(3,4),col=c("red","green"))
table(dat$bbzc024a,sex)
sex <- as.character(dat$a11d054a)
table(dat$bbzc024a,sex)
tab2 <- table(dat$bbzc024a,sex)
barplot(tab2)
dev.off()
barplot(tab2,beside=T)
plot(tab)
plot(runif(100))
data(VADeaths)
?barplot
barplot(VADeaths, beside = TRUE,
col = c("lightblue", "mistyrose", "lightcyan",
"lavender", "cornsilk"),
legend = rownames(VADeaths), ylim = c(0, 100))
title(main = "Death Rates in Virginia", font.main = 4)
barplot(VADeaths, beside = TRUE)
barplot(VADeaths, beside = TRUE,col=1:5)
?VADeaths
VADeaths
str(VADeaths)
VADeaths <- data.frame(VADeaths)
tab_a11d054a <- table(dat$a11d054a)
barplot(tab_a11d054a)
barplot(dat$a11d054a)
barplot(tab_a11d054a,col=1:2)
install.packages("mlmRev")
data(Chem97)
install.packages("lattice")
?histogram
histogram( ~ height | voice.part, data = singer, nint = 17,
endpoints = c(59.5, 76.5), layout = c(2,4), aspect = 1,
xlab = "Height (inches)")
library(lattice)
?melanoma
# install.packages("lattice")
library(lattice)
histogram(~ duration | a11d054a,data = dat)
histogram(~ duration | a11d054a,data = dat,
layout=c(2,1))
histogram(~ duration | a11d054a,data = dat,
layout=c(1,2))
?densityplot
head(datf$a11c037a)
dat$duration
head(dat$duration)
str(dat$duration)
install.packages("ggThemeAssist")
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = clarity,size = 4)) +
geom_smooth(aes(colour = cut, fill = cut))+
facet_wrap(~ cut)
d <- diamonds[sample(nrow(diamonds), 1000), ]
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = clarity,size = 4)) +
geom_smooth(aes(colour = cut, fill = cut))+
facet_wrap(~ cut)
library(plotly)
install.packages("plotly")
library(plotly)
ggplotly(p)
data(mtcars)
?mtcars
m1 <- lm(mpg ~ wt,data=mtcars)
m1
sum_m1 <- summary(m1)
sum_m1
sum_m1$coefficients
m3d<-lm(mpg~log(wt),data=mtcars)
log(mtcars$wt)
?log
log2(mtcars$wt)
mtcars$wt^2
mtcars$wt^4
plot(m1)
par(mfrow=c(2,2))
par(mfrow=c(2,2))
plot(m1)
plot(x=mtcars$wt,y=mtcars$mpg)
dev.off()
plot(x=mtcars$wt,y=mtcars$mpg)
abline(m1)
str(mtcars$cyl)
m4 <- lm(mpg ~ cyl + wt, data = mtcars)
summary(m4)
mtcars$cyl <- as.factor(mtcars$cyl)
m4 <- lm(mpg ~ cyl + wt, data = mtcars)
summary(m4)
table(mtcars$cyl)
data(toycars)
datasets.load:::datasets.load()
install.packages("DAAG")
install.packages("DAAG")
data(toycars)
data(toycars)
toycars
library(DAAG)
data(toycars)
toycars <- as.factor(toycars)
head(toycars)
toycars <- data.frame(toycars)
data(toycars)
toycars <- data.frame(toycars)
head(toycars)
toycars <- as.factor(toycars)
data(toycars)
str(toycars)
data(toycars)
# toycars <- data.frame(toycars)
toycars$car <- as.factor(toycars$car)
boxplot(distance~car)
boxplot(distance~car,data=toycars)
mod1 <- lm(distance~car,data=toycars)
summary(mod1)
sum_mod1 <- summary(mod1)
mod0 <- lm(distance~car,data=toycars)
sum_mod0 <- summary(mod0)
mod1 <- lm(distance~car,data=toycars[toycars$car==1,])
mod2 <- lm(distance~car,data=toycars[toycars$car==2,])
mod3 <- lm(distance~car,data=toycars[toycars$car==3,])
mod1 <- lm(distance~angle,data=toycars[toycars$car==1,])
mod2 <- lm(distance~angle,data=toycars[toycars$car==2,])
mod3 <- lm(distance~angle,data=toycars[toycars$car==3,])
plot(y=distance,x=angle)
plot(y=distance,x=angle,data=toycars)
head(toycars)
plot(y=toycars$distance,x=toycars$angle)
toycars$col <- "red"
toycars$col[toycars$car==2] <- "green"
plot(y=toycars$distance,x=toycars$angle,col=toycars$col)
toycars$col <- "red"
toycars$col[toycars$car==2] <- "blue"
toycars$col[toycars$car==3] <- "green"
plot(y=toycars$distance,x=toycars$angle,col=toycars$col)
head(toycars)
plot(y=toycars$distance,x=toycars$angle,col=toycars$col)
abline(mod1,col="red")
abline(mod2,col="blue")
abline(mod1,col="green")
abline(mod1,col="red")
mod1 <- lm(distance~angle,data=toycars[toycars$car==1,])
mod2 <- lm(distance~angle,data=toycars[toycars$car==2,])
mod3 <- lm(distance~angle,data=toycars[toycars$car==3,])
toycars$col <- "red"
toycars$col[toycars$car==2] <- "blue"
toycars$col[toycars$car==3] <- "green"
plot(y=toycars$distance,x=toycars$angle,col=toycars$col)
abline(mod1,col="red")
abline(mod2,col="blue")
abline(mod1,col="green")
abline(mod3,col="green")
plot(y=toycars$distance,x=toycars$angle,col=toycars$col)
abline(mod1,col="red")
abline(mod2,col="blue")
abline(mod3,col="green")
boxplot(distance~car,data=toycars)
toycars$col <- "red"
toycars
toycars$col <- "red"
toycars$col[toycars$car==2] <- "blue"
toycars$col[toycars$car==3] <- "green"
plot(y=toycars$distance,x=toycars$angle,col=toycars$col)
abline(mod1,col="red")
abline(mod2,col="blue")
abline(mod3,col="green")
mod <- lm(distance~angle+car,data=toycars)
summary(mod)
sum_mod <- summary(mod)
sum_mod$r.squared
summary(mod1)
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer(m1)
cars
summary(cars)
date()
summary(cars)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
install.packages("flexdashboard")
library(DT)
load("../data/dat_cf2.RData")
getwd()
setwd("~/GitHub/r_intro_gp18/slides")
dat <- xlsx::read.xlsx2("BSPdat.xlsx")
dat <- xlsx::read.xlsx2("BSPdat.xlsx",1)
